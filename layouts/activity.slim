- render 'default' do
  article
    header
      h1 #{item[:title]}
      p
        | Last modified #{{time_tag(item[:mtime])}}
    - if background_items(item).any?
      section
        header
          h1 Background
        ul
          - background_items(item).each do |b|
            li #{{link_or_content(b)}}
      
    section
      == yield
    - if has_user_repo(item)
      section
        header
          h1 id="submission" Submission
        p 
          | Push your git repository to the remote at 
          code
            | #{config[:git_url]}:#{user_repo(item)} 
          | where <code>USER</code> is your git user name.
        p 
          | If you have initialized a new repo but have not added a remote yet:
          code
            | git remote add origin #{config[:git_url]}:#{user_repo(item)}
        p If you have already added a remote named <code>origin</code>, but the URL is incorrect, replace <code>add</code> with <code>set-url</code> in the above command. You can always check that remotes you have added by running <code>git remote -v</code>.
    - if has_tests(item)
      section
        header
          h1 id="testing" Testing
        p 
          - feature_repos(item).each do |f|
            | Feature repo path: 
            code
              = f[:feature]
            p
              | The following features will be tested using cucumber:
            - features(f).each do |feature|
              == feature.compiled_content              
            p 
              | You can run the tests manually with 
              pre
                code
                  | $ cucumber /usr/share/#{{f[:feature]}}
              | when logged in to your shell account. This command assumes your current working directory is your project directory.
  footer
